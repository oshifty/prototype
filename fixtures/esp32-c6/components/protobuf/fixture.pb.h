/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_FIXTURE_PB_H_INCLUDED
#define PB_FIXTURE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _ResponseMessage_StatusResponse_StatusCode {
    ResponseMessage_StatusResponse_StatusCode_OK = 0,
    ResponseMessage_StatusResponse_StatusCode_WARNING = 1,
    ResponseMessage_StatusResponse_StatusCode_ERROR = 2
} ResponseMessage_StatusResponse_StatusCode;

/* Struct definitions */
typedef struct _CommandMessage_WifiConfig_StaticIpConfig {
    pb_callback_t ip;
    pb_callback_t gateway;
    pb_callback_t netmask;
} CommandMessage_WifiConfig_StaticIpConfig;

typedef struct _CommandMessage_WifiConfig {
    pb_callback_t ssid;
    pb_callback_t password;
    bool has_staticIpConfig;
    CommandMessage_WifiConfig_StaticIpConfig staticIpConfig;
} CommandMessage_WifiConfig;

typedef struct _CommandMessage_GetAttributeValue {
    int32_t attributeId;
} CommandMessage_GetAttributeValue;

typedef struct _CommandMessage_GetAttributeValues {
    pb_callback_t attributeIds;
} CommandMessage_GetAttributeValues;

typedef struct _CommandMessage_SetAttributeValues {
    pb_callback_t data;
} CommandMessage_SetAttributeValues;

typedef struct _ResponseMessage_SetConfigResponse {
    bool success;
} ResponseMessage_SetConfigResponse;

typedef struct _ResponseMessage_StatusResponse {
    /* enum: OK, WARNING, ERROR */
    ResponseMessage_StatusResponse_StatusCode status;
} ResponseMessage_StatusResponse;

typedef struct _ResponseMessage_HandshakeResponse {
    bool success;
} ResponseMessage_HandshakeResponse;

typedef struct _AttributeValue {
    int32_t attributeId;
    pb_size_t which_value;
    union {
        int32_t intValue;
        char stringValue[32];
    } value;
} AttributeValue;

typedef struct _CommandMessage_SetAttributeValue {
    bool has_data;
    AttributeValue data;
} CommandMessage_SetAttributeValue;

typedef struct _ResponseMessage_AttributeValues {
    pb_size_t data_count;
    AttributeValue data[3];
} ResponseMessage_AttributeValues;

typedef struct _Empty {
    char dummy_field;
} Empty;

typedef struct _CommandMessage {
    pb_size_t which_command;
    union {
        CommandMessage_WifiConfig setWifiConfig;
        Empty getInfo;
        Empty getStatus;
        Empty handshake;
        Empty getFixtureDefinition;
        CommandMessage_GetAttributeValue getAttributeValue;
        CommandMessage_GetAttributeValues getAttributeValues;
        Empty getAllAttributeValues;
        CommandMessage_SetAttributeValue setAttributeValue;
        CommandMessage_SetAttributeValues setAttributeValues;
    } command;
} CommandMessage;

typedef struct _SemVer {
    int32_t major;
    int32_t minor;
    int32_t patch;
} SemVer;

typedef struct _ResponseMessage_InfoResponse {
    char manufacturer[64];
    char model[64];
    char serialNumber[32];
    bool has_firmwareVersion;
    SemVer firmwareVersion;
    bool has_hardwareVersion;
    SemVer hardwareVersion;
} ResponseMessage_InfoResponse;

typedef struct _ResponseMessage {
    pb_size_t which_response;
    union {
        ResponseMessage_SetConfigResponse setConfigResponse;
        ResponseMessage_InfoResponse info;
        ResponseMessage_StatusResponse status;
        ResponseMessage_HandshakeResponse handshake;
        Empty fixtureDefinition;
        AttributeValue attributeValue;
        ResponseMessage_AttributeValues attributeValues;
    } response;
} ResponseMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _ResponseMessage_StatusResponse_StatusCode_MIN ResponseMessage_StatusResponse_StatusCode_OK
#define _ResponseMessage_StatusResponse_StatusCode_MAX ResponseMessage_StatusResponse_StatusCode_ERROR
#define _ResponseMessage_StatusResponse_StatusCode_ARRAYSIZE ((ResponseMessage_StatusResponse_StatusCode)(ResponseMessage_StatusResponse_StatusCode_ERROR+1))











#define ResponseMessage_StatusResponse_status_ENUMTYPE ResponseMessage_StatusResponse_StatusCode







/* Initializer values for message structs */
#define CommandMessage_init_default              {0, {CommandMessage_WifiConfig_init_default}}
#define CommandMessage_WifiConfig_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, false, CommandMessage_WifiConfig_StaticIpConfig_init_default}
#define CommandMessage_WifiConfig_StaticIpConfig_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define CommandMessage_GetAttributeValue_init_default {0}
#define CommandMessage_GetAttributeValues_init_default {{{NULL}, NULL}}
#define CommandMessage_SetAttributeValue_init_default {false, AttributeValue_init_default}
#define CommandMessage_SetAttributeValues_init_default {{{NULL}, NULL}}
#define ResponseMessage_init_default             {0, {ResponseMessage_SetConfigResponse_init_default}}
#define ResponseMessage_SetConfigResponse_init_default {0}
#define ResponseMessage_InfoResponse_init_default {"", "", "", false, SemVer_init_default, false, SemVer_init_default}
#define ResponseMessage_StatusResponse_init_default {_ResponseMessage_StatusResponse_StatusCode_MIN}
#define ResponseMessage_HandshakeResponse_init_default {0}
#define ResponseMessage_AttributeValues_init_default {0, {AttributeValue_init_default, AttributeValue_init_default, AttributeValue_init_default}}
#define AttributeValue_init_default              {0, 0, {0}}
#define Empty_init_default                       {0}
#define SemVer_init_default                      {0, 0, 0}
#define CommandMessage_init_zero                 {0, {CommandMessage_WifiConfig_init_zero}}
#define CommandMessage_WifiConfig_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, false, CommandMessage_WifiConfig_StaticIpConfig_init_zero}
#define CommandMessage_WifiConfig_StaticIpConfig_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define CommandMessage_GetAttributeValue_init_zero {0}
#define CommandMessage_GetAttributeValues_init_zero {{{NULL}, NULL}}
#define CommandMessage_SetAttributeValue_init_zero {false, AttributeValue_init_zero}
#define CommandMessage_SetAttributeValues_init_zero {{{NULL}, NULL}}
#define ResponseMessage_init_zero                {0, {ResponseMessage_SetConfigResponse_init_zero}}
#define ResponseMessage_SetConfigResponse_init_zero {0}
#define ResponseMessage_InfoResponse_init_zero   {"", "", "", false, SemVer_init_zero, false, SemVer_init_zero}
#define ResponseMessage_StatusResponse_init_zero {_ResponseMessage_StatusResponse_StatusCode_MIN}
#define ResponseMessage_HandshakeResponse_init_zero {0}
#define ResponseMessage_AttributeValues_init_zero {0, {AttributeValue_init_zero, AttributeValue_init_zero, AttributeValue_init_zero}}
#define AttributeValue_init_zero                 {0, 0, {0}}
#define Empty_init_zero                          {0}
#define SemVer_init_zero                         {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CommandMessage_WifiConfig_StaticIpConfig_ip_tag 1
#define CommandMessage_WifiConfig_StaticIpConfig_gateway_tag 2
#define CommandMessage_WifiConfig_StaticIpConfig_netmask_tag 3
#define CommandMessage_WifiConfig_ssid_tag       1
#define CommandMessage_WifiConfig_password_tag   2
#define CommandMessage_WifiConfig_staticIpConfig_tag 3
#define CommandMessage_GetAttributeValue_attributeId_tag 1
#define CommandMessage_GetAttributeValues_attributeIds_tag 1
#define CommandMessage_SetAttributeValues_data_tag 1
#define ResponseMessage_SetConfigResponse_success_tag 1
#define ResponseMessage_StatusResponse_status_tag 1
#define ResponseMessage_HandshakeResponse_success_tag 1
#define AttributeValue_attributeId_tag           1
#define AttributeValue_intValue_tag              2
#define AttributeValue_stringValue_tag           3
#define CommandMessage_SetAttributeValue_data_tag 1
#define ResponseMessage_AttributeValues_data_tag 1
#define CommandMessage_setWifiConfig_tag         1
#define CommandMessage_getInfo_tag               2
#define CommandMessage_getStatus_tag             3
#define CommandMessage_handshake_tag             4
#define CommandMessage_getFixtureDefinition_tag  5
#define CommandMessage_getAttributeValue_tag     6
#define CommandMessage_getAttributeValues_tag    7
#define CommandMessage_getAllAttributeValues_tag 8
#define CommandMessage_setAttributeValue_tag     9
#define CommandMessage_setAttributeValues_tag    10
#define SemVer_major_tag                         1
#define SemVer_minor_tag                         2
#define SemVer_patch_tag                         3
#define ResponseMessage_InfoResponse_manufacturer_tag 1
#define ResponseMessage_InfoResponse_model_tag   2
#define ResponseMessage_InfoResponse_serialNumber_tag 3
#define ResponseMessage_InfoResponse_firmwareVersion_tag 4
#define ResponseMessage_InfoResponse_hardwareVersion_tag 5
#define ResponseMessage_setConfigResponse_tag    1
#define ResponseMessage_info_tag                 2
#define ResponseMessage_status_tag               3
#define ResponseMessage_handshake_tag            4
#define ResponseMessage_fixtureDefinition_tag    5
#define ResponseMessage_attributeValue_tag       6
#define ResponseMessage_attributeValues_tag      7

/* Struct field encoding specification for nanopb */
#define CommandMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,setWifiConfig,command.setWifiConfig),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getInfo,command.getInfo),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getStatus,command.getStatus),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,handshake,command.handshake),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getFixtureDefinition,command.getFixtureDefinition),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getAttributeValue,command.getAttributeValue),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getAttributeValues,command.getAttributeValues),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,getAllAttributeValues,command.getAllAttributeValues),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,setAttributeValue,command.setAttributeValue),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,setAttributeValues,command.setAttributeValues),  10)
#define CommandMessage_CALLBACK NULL
#define CommandMessage_DEFAULT NULL
#define CommandMessage_command_setWifiConfig_MSGTYPE CommandMessage_WifiConfig
#define CommandMessage_command_getInfo_MSGTYPE Empty
#define CommandMessage_command_getStatus_MSGTYPE Empty
#define CommandMessage_command_handshake_MSGTYPE Empty
#define CommandMessage_command_getFixtureDefinition_MSGTYPE Empty
#define CommandMessage_command_getAttributeValue_MSGTYPE CommandMessage_GetAttributeValue
#define CommandMessage_command_getAttributeValues_MSGTYPE CommandMessage_GetAttributeValues
#define CommandMessage_command_getAllAttributeValues_MSGTYPE Empty
#define CommandMessage_command_setAttributeValue_MSGTYPE CommandMessage_SetAttributeValue
#define CommandMessage_command_setAttributeValues_MSGTYPE CommandMessage_SetAttributeValues

#define CommandMessage_WifiConfig_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ssid,              1) \
X(a, CALLBACK, SINGULAR, STRING,   password,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  staticIpConfig,    3)
#define CommandMessage_WifiConfig_CALLBACK pb_default_field_callback
#define CommandMessage_WifiConfig_DEFAULT NULL
#define CommandMessage_WifiConfig_staticIpConfig_MSGTYPE CommandMessage_WifiConfig_StaticIpConfig

#define CommandMessage_WifiConfig_StaticIpConfig_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   ip,                1) \
X(a, CALLBACK, SINGULAR, STRING,   gateway,           2) \
X(a, CALLBACK, SINGULAR, STRING,   netmask,           3)
#define CommandMessage_WifiConfig_StaticIpConfig_CALLBACK pb_default_field_callback
#define CommandMessage_WifiConfig_StaticIpConfig_DEFAULT NULL

#define CommandMessage_GetAttributeValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    attributeId,       1)
#define CommandMessage_GetAttributeValue_CALLBACK NULL
#define CommandMessage_GetAttributeValue_DEFAULT NULL

#define CommandMessage_GetAttributeValues_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, INT32,    attributeIds,      1)
#define CommandMessage_GetAttributeValues_CALLBACK pb_default_field_callback
#define CommandMessage_GetAttributeValues_DEFAULT NULL

#define CommandMessage_SetAttributeValue_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              1)
#define CommandMessage_SetAttributeValue_CALLBACK NULL
#define CommandMessage_SetAttributeValue_DEFAULT NULL
#define CommandMessage_SetAttributeValue_data_MSGTYPE AttributeValue

#define CommandMessage_SetAttributeValues_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  data,              1)
#define CommandMessage_SetAttributeValues_CALLBACK pb_default_field_callback
#define CommandMessage_SetAttributeValues_DEFAULT NULL
#define CommandMessage_SetAttributeValues_data_MSGTYPE AttributeValue

#define ResponseMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,setConfigResponse,response.setConfigResponse),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,info,response.info),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,status,response.status),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,handshake,response.handshake),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,fixtureDefinition,response.fixtureDefinition),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,attributeValue,response.attributeValue),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,attributeValues,response.attributeValues),   7)
#define ResponseMessage_CALLBACK NULL
#define ResponseMessage_DEFAULT NULL
#define ResponseMessage_response_setConfigResponse_MSGTYPE ResponseMessage_SetConfigResponse
#define ResponseMessage_response_info_MSGTYPE ResponseMessage_InfoResponse
#define ResponseMessage_response_status_MSGTYPE ResponseMessage_StatusResponse
#define ResponseMessage_response_handshake_MSGTYPE ResponseMessage_HandshakeResponse
#define ResponseMessage_response_fixtureDefinition_MSGTYPE Empty
#define ResponseMessage_response_attributeValue_MSGTYPE AttributeValue
#define ResponseMessage_response_attributeValues_MSGTYPE ResponseMessage_AttributeValues

#define ResponseMessage_SetConfigResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1)
#define ResponseMessage_SetConfigResponse_CALLBACK NULL
#define ResponseMessage_SetConfigResponse_DEFAULT NULL

#define ResponseMessage_InfoResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   manufacturer,      1) \
X(a, STATIC,   SINGULAR, STRING,   model,             2) \
X(a, STATIC,   SINGULAR, STRING,   serialNumber,      3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  firmwareVersion,   4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  hardwareVersion,   5)
#define ResponseMessage_InfoResponse_CALLBACK NULL
#define ResponseMessage_InfoResponse_DEFAULT NULL
#define ResponseMessage_InfoResponse_firmwareVersion_MSGTYPE SemVer
#define ResponseMessage_InfoResponse_hardwareVersion_MSGTYPE SemVer

#define ResponseMessage_StatusResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1)
#define ResponseMessage_StatusResponse_CALLBACK NULL
#define ResponseMessage_StatusResponse_DEFAULT NULL

#define ResponseMessage_HandshakeResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1)
#define ResponseMessage_HandshakeResponse_CALLBACK NULL
#define ResponseMessage_HandshakeResponse_DEFAULT NULL

#define ResponseMessage_AttributeValues_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  data,              1)
#define ResponseMessage_AttributeValues_CALLBACK NULL
#define ResponseMessage_AttributeValues_DEFAULT NULL
#define ResponseMessage_AttributeValues_data_MSGTYPE AttributeValue

#define AttributeValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    attributeId,       1) \
X(a, STATIC,   ONEOF,    INT32,    (value,intValue,value.intValue),   2) \
X(a, STATIC,   ONEOF,    STRING,   (value,stringValue,value.stringValue),   3)
#define AttributeValue_CALLBACK NULL
#define AttributeValue_DEFAULT NULL

#define Empty_FIELDLIST(X, a) \

#define Empty_CALLBACK NULL
#define Empty_DEFAULT NULL

#define SemVer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    major,             1) \
X(a, STATIC,   SINGULAR, INT32,    minor,             2) \
X(a, STATIC,   SINGULAR, INT32,    patch,             3)
#define SemVer_CALLBACK NULL
#define SemVer_DEFAULT NULL

extern const pb_msgdesc_t CommandMessage_msg;
extern const pb_msgdesc_t CommandMessage_WifiConfig_msg;
extern const pb_msgdesc_t CommandMessage_WifiConfig_StaticIpConfig_msg;
extern const pb_msgdesc_t CommandMessage_GetAttributeValue_msg;
extern const pb_msgdesc_t CommandMessage_GetAttributeValues_msg;
extern const pb_msgdesc_t CommandMessage_SetAttributeValue_msg;
extern const pb_msgdesc_t CommandMessage_SetAttributeValues_msg;
extern const pb_msgdesc_t ResponseMessage_msg;
extern const pb_msgdesc_t ResponseMessage_SetConfigResponse_msg;
extern const pb_msgdesc_t ResponseMessage_InfoResponse_msg;
extern const pb_msgdesc_t ResponseMessage_StatusResponse_msg;
extern const pb_msgdesc_t ResponseMessage_HandshakeResponse_msg;
extern const pb_msgdesc_t ResponseMessage_AttributeValues_msg;
extern const pb_msgdesc_t AttributeValue_msg;
extern const pb_msgdesc_t Empty_msg;
extern const pb_msgdesc_t SemVer_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CommandMessage_fields &CommandMessage_msg
#define CommandMessage_WifiConfig_fields &CommandMessage_WifiConfig_msg
#define CommandMessage_WifiConfig_StaticIpConfig_fields &CommandMessage_WifiConfig_StaticIpConfig_msg
#define CommandMessage_GetAttributeValue_fields &CommandMessage_GetAttributeValue_msg
#define CommandMessage_GetAttributeValues_fields &CommandMessage_GetAttributeValues_msg
#define CommandMessage_SetAttributeValue_fields &CommandMessage_SetAttributeValue_msg
#define CommandMessage_SetAttributeValues_fields &CommandMessage_SetAttributeValues_msg
#define ResponseMessage_fields &ResponseMessage_msg
#define ResponseMessage_SetConfigResponse_fields &ResponseMessage_SetConfigResponse_msg
#define ResponseMessage_InfoResponse_fields &ResponseMessage_InfoResponse_msg
#define ResponseMessage_StatusResponse_fields &ResponseMessage_StatusResponse_msg
#define ResponseMessage_HandshakeResponse_fields &ResponseMessage_HandshakeResponse_msg
#define ResponseMessage_AttributeValues_fields &ResponseMessage_AttributeValues_msg
#define AttributeValue_fields &AttributeValue_msg
#define Empty_fields &Empty_msg
#define SemVer_fields &SemVer_msg

/* Maximum encoded size of messages (where known) */
/* CommandMessage_size depends on runtime parameters */
/* CommandMessage_WifiConfig_size depends on runtime parameters */
/* CommandMessage_WifiConfig_StaticIpConfig_size depends on runtime parameters */
/* CommandMessage_GetAttributeValues_size depends on runtime parameters */
/* CommandMessage_SetAttributeValues_size depends on runtime parameters */
#define AttributeValue_size                      44
#define CommandMessage_GetAttributeValue_size    11
#define CommandMessage_SetAttributeValue_size    46
#define Empty_size                               0
#define FIXTURE_PB_H_MAX_SIZE                    ResponseMessage_size
#define ResponseMessage_AttributeValues_size     138
#define ResponseMessage_HandshakeResponse_size   2
#define ResponseMessage_InfoResponse_size        233
#define ResponseMessage_SetConfigResponse_size   2
#define ResponseMessage_StatusResponse_size      2
#define ResponseMessage_size                     236
#define SemVer_size                              33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
